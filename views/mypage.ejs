<!DOCTYPE html>
<html lang="en">

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="./style.css">
    <link rel="stylesheet" href="./bottom.css">
    <link rel="stylesheet" href="./mypage.css">
    <link rel="stylesheet" href="./reset.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdn.nunucode.com/font.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>마이페이지</title>
</head>
    <div class="status-bar">
        <div class="status-bar__coulumn"><i class="bi bi-arrow-left" onclick="goBack()" style="font-size: 25px;"></i>
        </div>
        <div class="status-bar__coulumn"><i class="bi bi-person-circle" style="font-size: 25px;"></i></div>
        <div class="status-bar__coulumn"><a href="setting" class="status-bar__link"><i class="bi bi-gear-fill"
                    style="font-size: 25px;"></i></a></div>
    </div>
    <div class="mypage-profile">
      <div id="profile-photo" class="profile-photo">
        <img id="profile-image" src="<%= profile_image_path %>" style="width: 100%; height: 100%; border-radius: 100%;">
      </div>
        <div id="profile-nickname" class="profile-nickname">
            <h2> <%= nickname %> 님</h2>
        </div>
    </div>

    <div class="mypage_btn">
        <div class="mypage_bookmark_btn"><a href="bookmark"><i class="bi bi-bookmark-fill"></i><span>북마크 <%= bookmarkCount %></span></a></div>
        <div class="mypage_like_btn"><a href="thumbs"><i class="bi bi-hand-thumbs-up-fill"></i><span>추천 <%= thumbsCount %></span></a>
        </div>
    </div>


    <div class="mypage_btn_list">
        <div class="changeprofile"><input type="button" value="프로필 수정" class="mypage_option"></div>
        <div class="changenickname" onclick="showModal_id()"><input type="button" value="닉네임 변경" class="mypage_option"></div>
        <div class="changepassword" onclick="showModal_pw()"><input type="button" value="비밀번호 변경" class="mypage_option"></div>
        <a href="/logout" class="logout"><input type="button" value="로그아웃" class="mypage_option"></a>
    </div>

    <%- bottom %>

    <!-- nickname modal.css -->
  <div class="container" id="modal_id"> 
    <div class="popup-wrap"> 
      <div class="popup">	
        <div class="popup-body">	
          <div class="body-content">
            <div class="body-titlebox">
              <p>요즘말사전</p>
              <h1>변경할 닉네임을 입력해주세요</h1>

              <form id="changeNicknameForm" method="post" action="">
                <div class="int-area">
                    <input id="changenickname_modal" type="text">
                    <button id="changenickname_button">
                      <i class="bi bi-arrow-right-square-fill"></i></button>
                </div>
            </form>
        </div>
          </div>
        </div>
        <div class="popup-foot" id="hh">
          <span class="pop-btn close" id="close" onclick="closeClick_id()">취소</span>
          <span class="pop-btn confirm" id="saveNicknameButton" onclick="changeclick_id()" type="submit">확인</span>
        </div>
      </div>
     </div>
  </div>

  <!-- password modal.css -->
  <div class="container" id="modal_pw"> 
    <div class="popup-wrap" id="failBack"> 	
      <div class="popup" id="failModal">	
        <div class="popup-body">	
          <div class="body-content">
            <div class="body-titlebox">
              <p>요즘말사전</p>
              <h1>변경할 비밀번호를 입력해주세요</h1>

              <form action="" method="post">
                <div class="int-area">
                    <input id="changepassword_modal" type="text">
                    <button id="changepassword_button" class="bi bi-arrow-right-square-fill"></button>
                </div>
            </form>
        </div>
          </div>
        </div>
        <div class="popup-foot" id="hh">
          <span class="pop-btn close" id="close" onclick="closeClick_pw()">취소</span>
          <span class="pop-btn confirm" id="confirm" onclick="changePassword()" type="submit">확인</span>
        </div>
      </div>
     </div>
  </div>
        
        <script>
            function goBack() {
            window.history.back();
            }

//<---profile 변경--->
const changeProfileBtn = document.querySelector('.changeprofile input[type="button"]');
const profileImage = document.querySelector('#profile-image');

changeProfileBtn.addEventListener('click', () => {
  const fileInput = document.createElement('input');
  fileInput.type = 'file';
  fileInput.accept = 'image/*';
  fileInput.addEventListener('change', () => {
    const file = fileInput.files[0];
    const reader = new FileReader();
    reader.addEventListener('load', () => {
      // 선택된 이미지 파일을 img 태그의 src 속성에 할당하여 업데이트
      profileImage.src = reader.result;
      // 선택된 이미지에 selected 클래스 추가
      profileImage.classList.add('selected');
      // 이미지가 로드된 후에 이미지 요소의 크기를 적절하게 설정합니다.
      profileImage.style.width = '100%';
      profileImage.style.height = '100%';

       // 이미지 데이터를 로컬 스토리지에 저장합니다.
      localStorage.setItem('profileImage', reader.result);

      // FormData 객체를 생성하여 선택된 이미지 데이터를 담습니다.
      const formData = new FormData();
      formData.append('profileImage', file);

      // XMLHttpRequest 객체를 사용하여 POST 요청
      const xhr = new XMLHttpRequest();
      xhr.open('POST', '/mypage/upload');
      xhr.onload = () => {
        if (xhr.status === 200) {
          console.log(xhr.responseText);
        } else {
          console.error(xhr.responseText);
        }
      };
      xhr.send(formData);
    });
    reader.readAsDataURL(file);
  });
  fileInput.click();
});

// 페이지 로드 시, 로컬 스토리지에서 프로필 이미지를 가져와 설정합니다.
window.addEventListener('load', () => {
  const savedProfileImage = localStorage.getItem('profileImage');
  if (savedProfileImage) {
    profileImage.src = savedProfileImage;
    profileImage.classList.add('selected');
    profileImage.style.width = '100%';
    profileImage.style.height = '100%';
  }
});


//<---nickname modal--->
            function showModal_id(){
  // 아이콘 눌렀을 때 modal 창 뜨기
  document.querySelector('.popup ').style.display = 'block';
  document.querySelector('.popup-wrap').style.display = 'block';
  modal.style.display = 'block';
}

function closeClick_id(){
          // modal 취소 창닫기
          document.querySelector('.popup').style.display = 'none';
          document.querySelector('.popup-wrap').style.display = 'none';
        }
function saveNickname() {
                //입력된 닉네임을 가져오기
                var nickname = document.getElementById("nickname").value;
            
             // localStorage에 닉네임 저장
            localStorage.setItem("nickname", nickname);
           
              alert("저장되었습니다.");
              console.log(nickname);
            }

//<---nickname 변경--->
  function changeclick_id() {
  // 사용자가 입력한 값을 읽어서 변수에 저장
  var newNickname = document.getElementById("changenickname_modal").value;

  // 변경된 닉네임을 페이지에 적용
  document.getElementById("current-nickname").innerHTML = newNickname;

  // 변경된 닉네임을 서버에 저장 (예시: AJAX를 이용한 비동기 요청)
  var xhr = new XMLHttpRequest();
  xhr.open("POST", "/api/changeNickname");
  xhr.setRequestHeader("Content-Type", "application/json");
  xhr.onload = function() {
    if (xhr.status === 200) {
      console.log(xhr.responseText);
    } else {
      console.error(xhr.statusText);
    }
  };
  xhr.send(JSON.stringify({nickname: newNickname}));
}


//<---password modal--->
    function showModal_pw(){
  // 아이콘 눌렀을 때 modal 창 뜨기
  document.querySelector('#failBack').style.display = 'block';
  document.querySelector('#failModal').style.display = 'block';
  modal.style.display = 'block';
}

//<---password 변경--->

// HTML에서 비밀번호 변경 모달창과 관련된 element 가져오기
const modal = document.getElementById('modal_pw');
const input = document.getElementById('changepassword_modal');

// 모달창을 닫기 위한 함수
function closeModal_pw() {
  modal.style.display = 'none';
}

// 비밀번호 변경 요청을 보내는 함수
function changePassword() {  
  const newPassword = document.getElementById("changepassword_modal").value;
  // 새 비밀번호 값이 입력되지 않은 경우 에러 메시지 출력
  if (newPassword === '') {
    alert('새 비밀번호를 입력해주세요.');
    return;
  }
// API 호출을 위한 설정
var xhr = new XMLHttpRequest();
  xhr.open("POST", "http://localhost:8080");
  xhr.setRequestHeader("Content-Type", "application/json");

  
  // API 호출 시 전달할 데이터
  var data = {
    newPassword: newPassword
  };
  console.log(xhr.status);

  // API 호출 후 처리할 로직
  xhr.onreadystatechange = function() {
    if (xhr.readyState === 4) {
      if (xhr.status === 200) {
        // API 호출 성공 시 처리할 로직
        alert("비밀번호가 변경되었습니다.");
        closeModal();
      } else if (xhr.status === 400) {
        // Bad Request: 잘못된 요청
        alert("잘못된 요청입니다. 비밀번호 변경에 실패하였습니다.");
      } else if (xhr.status === 401) {
        // Unauthorized: 인증 실패
        alert("인증에 실패하여 비밀번호 변경에 실패하였습니다.");
      } else if (xhr.status === 403) {
        // Forbidden: 액세스 거부
        alert("액세스가 거부되어 비밀번호 변경에 실패하였습니다.");
      } else if (xhr.status === 500) {
        // Internal Server Error: 서버 오류
        alert("서버 오류로 인해 비밀번호 변경에 실패하였습니다.");
      } else {
        // 기타 상태 코드에 따른 처리
        alert("비밀번호 변경에 실패하였습니다. 상태 코드: " + xhr.status);
      }
    }
  };
  
// API 호출
console.log(JSON.stringify(data));
xhr.send(JSON.stringify(data));
}




// 모달창에서 '취소' 버튼 클릭 시 실행되는 함수
function closeClick_pw() {
  // 입력된 값 초기화
  input.value = '';
  // 모달창 닫기
  closeModal_pw();
}

// 모달창에서 '확인' 버튼 클릭 시 실행되는 함수
function confirmClick_pw() {
  // 비밀번호 변경 요청 함수 호출
  changePassword();
}

// 모달창에서 '확인' 버튼에 클릭 이벤트 리스너 등록
document.getElementById('confirm').addEventListener('click', confirmClick_pw);

// 모달창에서 '취소' 버튼에 클릭 이벤트 리스너 등록
document.getElementById('close').addEventListener('click', closeClick_pw);


</script>
        <script src="/color.js"></script>
</body>

</html>